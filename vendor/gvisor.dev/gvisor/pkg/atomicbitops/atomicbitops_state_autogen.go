// automatically generated by stateify.

//go:build (amd64 || arm64) && !amd64 && !arm64
// +build amd64 arm64
// +build !amd64
// +build !arm64

package atomicbitops

import (
	"context"

	"gvisor.dev/gvisor/pkg/state"
)

func (f *Float64) StateTypeName() string {
	return "pkg/atomicbitops.Float64"
}

func (f *Float64) StateFields() []string {
	return []string{
		"bits",
	}
}

func (f *Float64) beforeSave() {}

// +checklocksignore
func (f *Float64) StateSave(stateSinkObject state.Sink) {
	f.beforeSave()
	stateSinkObject.Save(0, &f.bits)
}

func (f *Float64) afterLoad(context.Context) {}

// +checklocksignore
func (f *Float64) StateLoad(ctx context.Context, stateSourceObject state.Source) {
	stateSourceObject.Load(0, &f.bits)
}

func init() {
	state.Register((*Float64)(nil))
}
